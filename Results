Python Output
In [79]: res=sm.OLS(data1.SpreadIV,data1[['m','m2','m3']],intercept=False).fit()

In [80]: res.params
Out[80]: 
m      0.045335
m2     3.529595
m3   -24.934154
dtype: float64

In [81]: res.resid

Out[81]: 
0     0.012871
1    -0.026499
2    -0.001893
3     0.002577
4     0.002764
5     0.005981
6     0.005226
7     0.002640
8    -0.001090
9    -0.005577
10   -0.010838
11   -0.012619
12   -0.005462
13    0.000485
14    0.010591
dtype: float64

Armadillo Output
    0.0453
    3.5296
  -24.9342

   0.0129
  -0.0265
  -0.0019
   0.0026
   0.0028
   0.0060
   0.0052
   0.0026
  -0.0011
  -0.0056
  -0.0108
  -0.0126
  -0.0055
   0.0005
   0.0106

  Weighted Regression Test :
Python
In [89]: res1=sm.WLS(data1.SpreadIV,data1[['m','m2','m3']],intercept=False,weights=data1.w1).fit()
In [90]: res1.params
Out[90]: 
m     -0.129716
m2     2.823257
m3   -24.101442
dtype: float64

In [96]: res1.resid
Out[96]: 
0     0.006184
1    -0.035894
2    -0.011512
3    -0.006609
4    -0.005398
5    -0.000626
6     0.000651
7     0.000522
8    -0.000371
9    -0.001684
10   -0.003474
11   -0.001522
12    0.009597
13    0.019703
14    0.034138
dtype: float64


C++:
   -0.1297
    2.8233
  -24.1014

   0.0062
  -0.0359
  -0.0115
  -0.0066
  -0.0054
  -0.0006
   0.0007
   0.0005
  -0.0004
  -0.0017
  -0.0035
  -0.0015
   0.0096
   0.0197
   0.0341



